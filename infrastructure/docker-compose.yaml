networks:
  backend:
    name: back-network
    driver: bridge
  ai_service:
    name: ai-service-network
    driver: bridge
services:
  chromadb:
    image: chromadb/chroma
    volumes:
      - ./chromadb:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY:-TRUE}
      - CHROMA_HOST_PORT=5000
    ports:
      - "5000:5000"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/api/v2/heartbeat" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ai_service

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - ./redis:/data
    environment:
      - REDIS_PASSWORD=redis
      - REDIS_PORT=6379
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 15s
      timeout: 5s
      retries: 5
    command: [ "redis-server" ]
    networks:
      - ai_service

  langgraph-api:
    image: milanmichiels/langgraph-container-team12:latest
    ports:
      - "8123:8123"
    restart: unless-stopped
    networks:
      - ai_service
      - backend
    depends_on:
      chromadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      chatbot-service:
        condition: service_healthy
      postgres_rummikub_db:
        condition: service_healthy
    environment:
      - PORT=8123
    env_file:
      - .env.production

  postgres_rummikub_db:
    image: postgres:15.8-alpine
    environment:
      POSTGRES_DB: 'rummikub_db'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
    ports:
      - '54326:5432'
    networks:
      - ai_service
      - backend
    volumes:
      - ./rummikub/postgres/data:/var/lib/postgresql/data
      - ./init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql

  chatbot-service:
    image: milanmichiels/chatbot-container-team12:latest
    depends_on:
      chromadb:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health/" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 150s
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
    env_file:
      - .env.production
    networks:
      - ai_service
      - backend

  ollama:
    image: ollama/ollama:0.5.3
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_MODELS=/root/.ollama/models
    volumes:
      - ./ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "ollama", "list" ]
      interval: 15s
      timeout: 5s
      retries: 5
    entrypoint: [ "/usr/bin/bash", "/entrypoint.sh" ]
    env_file:
      - .env.production
    networks:
      - ai_service